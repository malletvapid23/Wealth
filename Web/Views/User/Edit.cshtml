@model BusinessObjects.User

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    if (Request.UrlReferrer != null)
    {
        @Html.Hidden("returnUrl", Request.UrlReferrer)
    }

    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true)

        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName)
                @Html.ValidationMessageFor(model => model.MiddleName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserAccountTypeId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserAccountTypeId")
                @Html.ValidationMessageFor(model => model.UserAccountTypeId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ResourcePoolRate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ResourcePoolRate)
                @Html.ValidationMessageFor(model => model.ResourcePoolRate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Notes)
                @Html.ValidationMessageFor(model => model.Notes)
            </div>
        </div>

        @Html.HiddenFor(model => model.CreatedOn)

        @Html.HiddenFor(model => model.ModifiedOn)

        @Html.HiddenFor(model => model.DeletedOn)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@{if (Request.UrlReferrer != null)
{
    <div>
        <a href="@Request.UrlReferrer">Back</a>
    </div>
}}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

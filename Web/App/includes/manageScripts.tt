<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="$(SolutionDir)Framework\T4\EF.Utility.ttinclude"#>
<#@ output extension=".js"#><#

// To be able to control whether it's going to be executed
var executeMe = true; 
if (!executeMe)
	return string.Empty;

const string connectionString = @"Server=(LocalDb)\MSSQLLocalDB;Database=WealthEconomy;Integrated Security=True;MultipleActiveResultSets=True";

var textTransform = DynamicTextTransformation.Create(this);
var code = new CodeGenerationTools(this);
var ef = new MetadataTools(this);
var typeMapper = new TypeMapper(code, ef, textTransform.Errors);
var codeStringGenerator = new CodeStringGenerator(code, typeMapper, ef);
var	fileManager = EntityFrameworkTemplateFileManager.Create(this);
var edmMetadataLoader = new EdmMetadataLoader(textTransform.Host, textTransform.Errors);
IEnumerable<GlobalItem> itemCollection;
using (var db = new WealthEconomyContext(connectionString))
	itemCollection = edmMetadataLoader.CreateEdmItemCollection(db);

if (!typeMapper.VerifyCaseInsensitiveTypeUniqueness(typeMapper.GetAllGlobalItems(itemCollection), connectionString))
{
    return string.Empty;
}

#>
<#= codeStringGenerator.WriteHeader() #>
(function () {
    'use strict';

    document.write('\
	\
<#
foreach (var entityType in typeMapper.GetItemsToGenerate<EntityType>(itemCollection))
{
	// Variables
	var entityTypeName = code.Escape(entityType);
	var entityVariable = codeStringGenerator.GetCamelCase(entityTypeName);
	var entityServiceScriptFileName = string.Format("{0}Service.js?v=0223", entityVariable);
	var entityListControllerScriptFileName = string.Format("{0}ListController.js?v=022", entityVariable);
	var entityEditControllerScriptFileName = string.Format("{0}EditController.js?v=022", entityVariable);
#>
    <script src="/App/services/generated/<#= entityServiceScriptFileName #>"></script>\
    <script src="/App/controllers/manage/list/<#= entityListControllerScriptFileName #>"></script>\
    <script src="/App/controllers/manage/edit/<#= entityEditControllerScriptFileName #>"></script>\
	\
<#
}
#>
\
');

})();

<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="$(SolutionDir)Framework\T4\EF.Utility.ttinclude"#>
<#@ output extension=".txt"#><#

/*
	Use this file to generate the metadadata file(s) just for the first time.
	Since it's not possible to keep custom files under a t4 file, after the generating the outputs, copy into Metadata (subfolder) and customize them.
	Don't forget to remove "Generated" from the namespace.

	SH - 11 Mar. '14
*/

// To be able to control whether it's going to be executed
var executeMe = true; 
if (!executeMe)
	return string.Empty;

const string inputFile = @"..\..\..\DataObjects\Model.edmx";
var textTransform = DynamicTextTransformation.Create(this);
var code = new CodeGenerationTools(this);
var ef = new MetadataTools(this);
var typeMapper = new TypeMapper(code, ef, textTransform.Errors);
var	fileManager = EntityFrameworkTemplateFileManager.Create(this);
var itemCollection = new EdmMetadataLoader(textTransform.Host, textTransform.Errors).CreateEdmItemCollection(inputFile);
var codeStringGenerator = new CodeStringGenerator(code, typeMapper, ef);

if (!typeMapper.VerifyCaseInsensitiveTypeUniqueness(typeMapper.GetAllGlobalItems(itemCollection), inputFile))
{
    return string.Empty;
}

foreach (var entityType in typeMapper.GetItemsToGenerate<EntityType>(itemCollection))
{
	// Variables
	var entityMetadataName = string.Format("{0}Metadata", code.Escape(entityType));
	var outputFileName = string.Format(@"{0}.cs", entityMetadataName);

	if (entityMetadataName.StartsWith("Identity"))
		continue;

    fileManager.StartNewFile(outputFileName);

#>
<#= codeStringGenerator.WriteHeader() #>
namespace BusinessObjects.Metadata.Generated
{
    using System;
    using System.ComponentModel.DataAnnotations;

    public class <#=entityMetadataName#>
    {
<#

    var simpleProperties = typeMapper.GetSimpleProperties(entityType);
    if (simpleProperties.Any())
    {
        foreach (var edmProperty in simpleProperties)
        {
#>
        [Display(Name = <#=string.Format(@"""{0}""", code.Escape(edmProperty))#>)]
        <#=codeStringGenerator.MetadataProperty(edmProperty)#>

<#
        }
    }

#>
    }
}
<#
}

fileManager.Process();

#>
